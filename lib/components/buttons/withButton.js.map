{"version":3,"sources":["../../../src/components/buttons/withButton.js"],"names":["styles","create","button","alignSelf","justifyContent","borderRadius","text","color","preProps","customTheme","WrapComponent","WithButton","props","state","butonState","size","theme","type","Object","keys","find","value","active","disabled","block","activeOpacity","buttonState","press","themeStyle","getThemeStyle","borderColorNormal","borderWidth","borderColor","borderColorActive","borderColorPress","borderColorDisabled","baseStyle","backgroundColor","backgroundNormal","backgroundActive","backgroundDisabled","colorNormal","colorActive","colorPress","colorDisabled","icon","onPress","width","style","prepareButtonStyle","getInitialThemeStyle","prepareTextStyle","backgroundPress","setState","defaultProps","flat","outLine","transparent","outLineTransparent","flatTransparent","iconCycle","propTypes","PropTypes","number","string","bool","object","func","withButton"],"mappings":"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","file":"withButton.js","sourcesContent":["import React, { Component } from 'react'\nimport { TouchableHighlight, View, StyleSheet } from 'react-native'\nimport { getButtonTheme, configButtonType } from '../../themes'\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    borderRadius: 3,\n  },\n  text: {\n    color: '#ffffff'\n  }\n})\n\nexport default (preProps = {}, customTheme = false) => (WrapComponent) => {\n  class WithButton extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        butonState: 'normal'\n      }\n    }\n\n    static defaultProps = {\n      activeOpacity: 1,\n      size: 'lg',\n      theme: 'primary',\n      flat: false,\n      block: false,\n      active: false,\n      outLine: false,\n      disabled: false,\n      transparent: false,\n      outLineTransparent: false,\n      flatTransparent: false,\n      iconCycle: false,\n      style: {},\n      onPress: () => {},\n      width: null,\n    }\n\n    static propTypes = {\n      width: React.PropTypes.number,\n      activeOpacity: React.PropTypes.number,\n      size: React.PropTypes.string,\n      theme: React.PropTypes.string,\n      flat: React.PropTypes.bool,\n      block: React.PropTypes.bool,\n      active: React.PropTypes.bool,\n      outLine: React.PropTypes.bool,\n      disabled: React.PropTypes.bool,\n      transparent: React.PropTypes.bool,\n      outLineTransparent: React.PropTypes.bool,\n      flatTransparent: React.PropTypes.bool,\n      iconCycle: React.PropTypes.bool,\n      style: React.PropTypes.object,\n      onPress: React.PropTypes.func,\n    }\n\n    getThemeStyle() {\n      const { size, theme } = this.props\n      const type = Object.keys(configButtonType).find(value => this.props[value] === true) || 'default'\n      if (customTheme) {\n        return customTheme(getButtonTheme(theme, type, size))\n      }\n      return getButtonTheme(theme, type, size)\n    }\n\n    getInitialThemeStyle() {\n      const { active, disabled, block, activeOpacity } = this.props\n      const { buttonState } = this.state\n      const press = buttonState === 'press'\n      const themeStyle = this.getThemeStyle()\n      const borderColorNormal = themeStyle.button.borderColorNormal ? { borderWidth: 1, borderColor: themeStyle.button.borderColorNormal } : { borderWidth: 0 }\n      const borderColorActive = themeStyle.button.borderColorActive ? { borderWidth: 1, borderColor: themeStyle.button.borderColorActive } : { borderWidth: 0 }\n      const borderColorPress = themeStyle.button.borderColorPress ? { borderWidth: 1, borderColor: themeStyle.button.borderColorPress } : { borderWidth: 0 }\n      const borderColorDisabled = themeStyle.button.borderColorDisabled ? { borderWidth: 1, borderColor: themeStyle.button.borderColorDisabled } : { borderWidth: 0 }\n\n      return {\n        button: {\n          ...themeStyle.button.baseStyle,\n          ...{ backgroundColor: themeStyle.button.backgroundNormal },\n          ...borderColorNormal,\n          ...active ? { ...borderColorActive, backgroundColor: themeStyle.button.backgroundActive } : {},\n          ...press ? borderColorPress : {},\n          ...disabled ? { ...borderColorDisabled, backgroundColor: themeStyle.button.backgroundDisabled } : {},\n          ...{ alignSelf: block ? 'auto' : 'flex-start' },\n        },\n        text: {\n          ...themeStyle.text.baseStyle,\n          ...{ color: themeStyle.text.colorNormal },\n          ...active ? { color: themeStyle.text.colorActive } : {},\n          ...press && (activeOpacity === 1) ? { color: themeStyle.text.colorPress } : {},\n          ...disabled ? { color: themeStyle.text.colorDisabled } : {},\n        },\n        icon: themeStyle.icon\n      }\n    }\n\n    render() {\n      const { disabled, activeOpacity, onPress, width, style } = this.props\n      const prepareButtonStyle = {\n        ...this.getInitialThemeStyle().button,\n        ...width ? { width } : {}\n      }\n      const prepareTextStyle = this.getInitialThemeStyle().text\n      return (\n        <TouchableHighlight\n          style={[styles.button, prepareButtonStyle, style]}\n          underlayColor={(activeOpacity !== 1) ? this.getThemeStyle().button.backgroundNormal : this.getThemeStyle().button.backgroundPress}\n          activeOpacity={activeOpacity}\n          onPress={onPress}\n          disabled={disabled}\n          onHideUnderlay={() => this.setState(Object.assign({}, this.state, { buttonState: 'normal' }))}\n          onShowUnderlay={() => this.setState(Object.assign({}, this.state, { buttonState: 'press' }))}\n          >\n          <View>\n            <WrapComponent\n              {...this.props}\n              {...this.state}\n              textStyle={[styles.text, prepareTextStyle]}\n              getTheme={this.getInitialThemeStyle()}\n              />\n          </View>\n        </TouchableHighlight>\n      )\n    }\n  }\n\n  const withButton = props => (<WithButton {...preProps} {...props} />)\n  return withButton\n}\n"]}