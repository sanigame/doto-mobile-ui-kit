{"version":3,"sources":["../../../develop/src/components/buttons/button.js"],"names":["styles","create","wrapperContent","flexDirection","justifyContent","alignItems","wrapperIcon","icon","width","height","line","button","props","title","size","iconRight","block","lineColor","lineColorRight","iconStyle","getTheme","textStyle","renderIcon","iconName","lineIconColor","isIconRight","text","color","spacer","xs","sm","md","lg","styleOnIconRight","styleOfLine","fontSize","marginHorizontal","backgroundColor","styleBlock","position","zIndex","marginRight","propTypes","PropTypes","string","theme","buttonState","bool","disabled","object","buttonThemes","func","array"],"mappings":"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","file":"button.js","sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport withButton from './withButton';\nimport Icon from '../icon'\n\nconst styles = StyleSheet.create({\n  wrapperContent: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  wrapperIcon: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  icon: {\n    width: 24,\n    height: 24,\n  },\n  line: {\n    alignItems: 'center',\n    width: 1,\n  }\n})\n\nexport const button = (props) => {\n  const {\n    title = '',\n    size = '',\n    icon = '',\n    iconRight = '',\n    block = false,\n    lineColor = false,\n    lineColorRight = false,\n    iconStyle = {},\n    getTheme = {},\n    textStyle = [],\n  } = props\n  const renderIcon = (iconName, lineIconColor, isIconRight) => {\n    const line = getTheme.text.color\n    const spacer = {\n      xs: 5,\n      sm: 12,\n      md: 12,\n      lg: 12,\n    }\n    const styleOnIconRight = isIconRight ? { flexDirection: 'row-reverse' } : {}\n    const styleOfLine = {\n      height: getTheme.text.fontSize,\n      marginHorizontal: spacer[size],\n      backgroundColor: line\n    }\n    const styleBlock = {\n      position: 'absolute',\n      zIndex: 999,\n      [isIconRight ? 'right' : 'left']: 0,\n    }\n    return (\n      <View style={[\n        styles.wrapperIcon,\n        styleOnIconRight,\n        block ? styleBlock : { marginRight: spacer[size] },\n      ]}>\n        <Icon {...getTheme.icon} {...iconStyle} name={iconName} />\n        {lineIconColor ? <View style={[styles.line, styleOfLine]} /> : null}\n      </View>\n    )\n  }\n\n  return (\n    <View style={styles.wrapperContent}>\n      {icon ? renderIcon(icon, lineColor, false) : null}\n      <Text style={textStyle}>{title}</Text>\n      {iconRight ? renderIcon(iconRight, lineColorRight, true) : null}\n    </View>\n  )\n}\n\nbutton.propTypes = {\n  title: React.PropTypes.string,\n  theme: React.PropTypes.string,\n  buttonState: React.PropTypes.string,\n  size: React.PropTypes.string,\n  icon: React.PropTypes.string,\n  iconRight: React.PropTypes.string,\n  block: React.PropTypes.bool,\n  disabled: React.PropTypes.bool,\n  lineColor: React.PropTypes.bool,\n  lineColorRight: React.PropTypes.bool,\n  iconStyle: React.PropTypes.object,\n  getTheme: React.PropTypes.object,\n  buttonThemes: React.PropTypes.func,\n  textStyle: React.PropTypes.array,\n}\n\nexport default withButton()(button)\n"]}